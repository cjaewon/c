<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nodejs on ㅊ.JAEWON</title><link>https://c.cjaewon.com/tags/nodejs/</link><description>Recent content in Nodejs on ㅊ.JAEWON</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sat, 06 Mar 2021 20:39:51 +0900</lastBuildDate><atom:link href="https://c.cjaewon.com/tags/nodejs/index.xml" rel="self" type="application/rss+xml"/><item><title>Yarn과 함께 모노레포 흟어보기</title><link>https://c.cjaewon.com/articles/monorepo-with-yarn/</link><pubDate>Sat, 06 Mar 2021 20:39:51 +0900</pubDate><guid>https://c.cjaewon.com/articles/monorepo-with-yarn/</guid><description>자바스크립트 생태계의 발전으로 프론트, 백엔드 및 다양한 환경들을 지원 할 수 있게 되었다. 이런 상황에서부터 여러 프로젝트에서 중복되는 코드들을 여러번 작성해야하는 문제가 발생했다. 이 문제를 해결하기 위해서 등장한 것이 바로 모노레포(monorepo) 개념이다.
모노레포를 다시 정의해보자면 한 폴더안에 여러 프로젝트를 동시에 관리하는 것이다.
Yarn&amp;rsquo;s Workspace 가장 쉽게 모노레포를 사용하는 방법은 Yarn의 workspace를 사용하는 것이다.
먼저 다음과 같이 package.json 파일에 workspaces 라는 필드를 추가해준다. (private: true 은 필수로 모노레포가 외부로 패키지처럼 배포될 수 없음을 알려준다.</description></item></channel></rss>